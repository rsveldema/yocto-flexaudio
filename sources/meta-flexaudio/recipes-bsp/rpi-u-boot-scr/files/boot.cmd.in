
test -n "${BOOT_ORDER}" || setenv BOOT_ORDER "A B"
test -n "${BOOT_A_LEFT}" || setenv BOOT_A_LEFT 3
test -n "${BOOT_B_LEFT}" || setenv BOOT_B_LEFT 3

setenv dtbfile /boot/bcm2711-rpi-4-b.dtb



#setenv default_bootargs "earlyprintk dwc_otg.lpm_enable=0 rootfstype=ext4 rootflags=commit=100,data=writeback elevator=deadline rootwait console=tty1 cma=256M@512M console=ttyAMA0,115200 kgdboc=ttyAMA0,115200 net.ifnames=1"
#setenv default_bootargs "earlyprintk  dwc_otg.lpm_enable=0 rootfstype=ext4 console=ttyS1,115200n8 rootwait"
#setenv default_bootargs "coherent_pool=1M 8250.nr_uarts=1 video=HDMI-A-1:3840x2160@30,margin_left=48,margin_right=48,margin_top=48,margin_bottom=48 smsc95x.macaddr=DC:A6:32:D3:F2:5C vc_mem.mem_base=0x3ec00000 vc_mem.mem_size=0x40000000 earlyprintk  dwc_otg.lpm_enable=0 console=ttyS0,115200 net.ifnames=1 rootfstype=ext4 rootwait"
#setenv default_bootargs "coherent_pool=1M 8250.nr_uarts=1 smsc95x.macaddr=DC:A6:32:D3:F2:5C vc_mem.mem_base=0x3ec00000 vc_mem.mem_size=0x40000000 earlyprintk  dwc_otg.lpm_enable=0 console=ttyS0,115200 net.ifnames=1 rootfstype=ext4 rootwait"
setenv default_bootargs "coherent_pool=1M 8250.nr_uarts=1 smsc95x.macaddr=DC:A6:32:D3:F2:5C vc_mem.mem_base=0x3ec00000 vc_mem.mem_size=0x40000000 earlyprintk  dwc_otg.lpm_enable=0 console=ttyS0,115200 net.ifnames=1 rootfstype=ext4 rootwait nomodeset"



setenv bootargs
for BOOT_SLOT in "${BOOT_ORDER}"; do
  if test "x${bootargs}" != "x"; then
    # skip remaining slots
  elif test "x${BOOT_SLOT}" = "xA"; then
    if test 0x${BOOT_A_LEFT} -gt 0; then
      echo "Found valid slot A, ${BOOT_A_LEFT} attempts remaining"
      setexpr BOOT_A_LEFT ${BOOT_A_LEFT} - 1
      setenv load_kernel        "ext4load mmc 0:2 ${kernel_addr_r} /boot/Image"
      setenv load_device_tree   "ext4load mmc 0:2 ${fdt_addr_r} ${dtbfile}"
      setenv bootargs           "${default_bootargs} root=/dev/mmcblk0p2 rauc.slot=A"
    fi
  elif test "x${BOOT_SLOT}" = "xB"; then
    if test 0x${BOOT_B_LEFT} -gt 0; then
      echo "Found valid slot B, ${BOOT_B_LEFT} attempts remaining"
      setexpr BOOT_B_LEFT ${BOOT_B_LEFT} - 1
      setenv load_kernel        "ext4load mmc 0:3 ${kernel_addr_r} /boot/Image"
      setenv load_device_tree   "ext4load mmc 0:3 ${fdt_addr_r} ${dtbfile}"
      setenv bootargs           "${default_bootargs} root=/dev/mmcblk0p3 rauc.slot=B"
    fi
  fi
done

if test -n "${bootargs}"; then
  saveenv
else
  echo "No valid slot found, resetting tries to 3"
  setenv BOOT_A_LEFT 3
  setenv BOOT_B_LEFT 3
  saveenv
  reset
fi

echo "Loading kernel"
run load_kernel

#echo "Loading device tree"
# run load_device_tree
fdt addr ${fdt_addr}

echo " Starting kernel"
@@KERNEL_BOOTCMD@@ ${kernel_addr_r} - ${fdt_addr}
